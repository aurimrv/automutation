test-new

Creates a new test session. It means, it creates all the files necessary
to run a test on a C program. 

Parameters:

The tester has to provide the name of the source code (only one C module is
tested/mutated), the name of the executable file to be used in the test
the directory where the files are the compilation command to create
the executable file from the source file, the type of the test session.
How to provide these parameters is decribed next.

The last parameter in a command line is always the name of the test session.
All other programs will use this name to refer to the test session. If
no other parameter is provided, there are default values for all the other
parameters, based on the name of the test session.
As an example, if we have the following program invokation:

> test-new myprog

it is assumed that a "myprog.c" source file exists, a "myprog" executable
exists and a test session named "myprog" will be created.

------------------------------------
-test or -research 
one of them is used. -test is the default, if none is explicitly provided
the -test is assumed. When a reseach session is created, all mutants are
executed against all test cases. Examples:

> test-new -test myprog
> test-new -research myprog

------------------------------------
-S source-file
this parameter can be used to provide the name of the C file that will be
mutated/tested. For example

> test-new -S myprog mytestsession

this example will create a test session named "mytestsession" in which 
there is a file named "myprog.c". In this case, there should also exist
an executable file that matchs the source file name, i.e., "myprog".

------------------------------------
-E executable-file
this parameters allows to define the name of the executable file that 
corresponds to the source file. For instance:

> test-new -S myprog -E myexecutable mytestsession

will create a test session named "mytestsession" in which there is a 
file named "myprog.c" and an executable file "myexecutable". 

------------------------------------
-D directory
if this parameter is not used, all the programs must be in the current
directory and all the test session files will also be created in the
current directory. If -D is used, this can be changed. For example

> test-new -D /home/user/tests myprog

will create a test session in the specific directory. All the other 
parameters assume the default values, as mentioned above.

------------------------------------
-C compilation-command

to create the mutants and execute them, Proteum needs to know how to compile
the source mutant to create its executable. So, the tester has to instruct
the tool how to do it, providing the compilation command. The default 
value for this parameter is "gcc <source-file> -o <exec-file>" .
So,

> test-new myprog 

is equivalent to

> test-new -C "gcc myprog.c -o myprog" myprog

Other example:

> test-new -S myprog.c -E myprog -C "gcc myprog.c -o myprog -lm" mytestsession

defines that when the mutants are compiled, they have to be linked with 
the math library. 

 

